#!/bin/sh
set -o nounset
#set -x #DEBUG

. config/config-vars
. bin/functions.sh

# Bail if stock ISO file already exists
[ ! -f $UBUNTU_ISO_FILE ] || {
    $PRINTERROR Stock ubuntu ISO file already exists!
    exit 1
}

# Download stock image
$PRINTINFO Downloading stock Ubuntu ISO image if needed...
ISOTMP=$UBUNTU_ISO_FILE.tmp
[ -f $ISOTMP ] || {
    $PRINTINFO Not found, downloading $UBUNTU_ISO_URL

    MAXTRIES=10
    for i in $(seq 1 $MAXTRIES) ; do
        $CURL -C - -# $UBUNTU_ISO_URL -o $ISOTMP
        RET=$?
        [ $RET -eq 0 ] && break
        [ $RET -eq 33 ] && $PRINTINFO Ignoring... && break    # workaround curl bug
        [ $i -eq $MAXTRIES ] && $PRINTERROR Unable to download stock ISO file! && exit 1
        [ $RET -eq 56 ] && $PRINTWARN Network timeout, retrying... && continue # network timeout
        exit 1
    done
}

# Import Ubuntu gpg public key if needed
$PRINTINFO Checking for Ubuntu gpg public key \($UBUNTU_KEY_ID\)
$GPG --list-keys $UBUNTU_KEY_ID > /dev/null || {
    $PRINTINFO Not found, retrieving for import.
    $GPG --keyserver hkp://keyserver.ubuntu.com --recv-keys $UBUNTU_KEY_ID || {
        $PRINTERROR Import of key failed!
        exit 1
    }
    $PRINTSUCCESS Import successful.
}

# Retrieve SHA256SUMS and verify signature
$PRINTINFO Retrieving SHA256 hashes and signature files
[ -f $UBUNTU_SHA256SUMS_FILE ] || $CURL -# $UBUNTU_SHA256SUMS_URL -o $UBUNTU_SHA256SUMS_FILE || {
    $PRINTERROR Failed to retrieve SHA256SUMS file from Ubuntu server!
    exit 1
}
[ -f $UBUNTU_SHA256SUMS_FILE.gpg ] || $CURL -# $UBUNTU_SHA256SUMS_URL.gpg -o $UBUNTU_SHA256SUMS_FILE.gpg || {
    $PRINTERROR Failed to retrieve SHA256SUMS.gpg file from Ubuntu server!
    exit 1
}
$GPG --verify $UBUNTU_SHA256SUMS_FILE.gpg $UBUNTU_SHA256SUMS_FILE || {
    $PRINTERROR SHA256SUMS signature verification failed!
    exit 1
}

# Extract SHA256SUM from file
$PRINTINFO Calculating checksum of Ubuntu stock ISO image
CALCULATED=`$SHA256SUM $ISOTMP | cut -f 1 -d ' '`
EXPECTED=`grep $UBUNTU_ISO_BASE $UBUNTU_SHA256SUMS_FILE | cut -f 1 -d ' '`

if [ -z "$EXPECTED" ]; then
    $PRINTERROR "The checksum for $UBUNTU_ISO_FILE was not found in $UBUNTU_SHA256SUMS_FILE"
    exit 1
fi

$PRINTINFO "Calculated: $CALCULATED"
$PRINTINFO "Expected:   $EXPECTED"

if [ $CALCULATED != $EXPECTED ] ; then
    $PRINTERROR Checksum mismatch, failing!
    exit 1
fi

# Move verified ISO file into place
mv $ISOTMP $UBUNTU_ISO_FILE || exit 1

$PRINTSUCCESS Sucessfully downloaded Ubuntu stock ISO image.
exit 0
